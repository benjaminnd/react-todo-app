{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\minhn\\\\OneDrive\\\\Desktop\\\\projects\\\\react-todo-app\\\\src\\\\components\\\\TodoForm.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { GrAdd, GrUpdate } from 'react-icons/gr';\n\nfunction TodoForm({\n  edit,\n  addTodo,\n  updateTodo,\n  handleUpdate\n}) {\n  const [input, setInput] = useState('');\n  const inputRef = useRef(null);\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!edit) {\n      console.log(input);\n      addTodo({\n        id: Math.floor(Math.random() * 1000),\n        value: input,\n        edit: false,\n        completed: false\n      });\n    } else {\n      updateTodo({\n        id: edit.id,\n        value: input,\n        edit: false,\n        completed: edit.completed\n      });\n      handleUpdate();\n    }\n\n    setInput('');\n  };\n\n  const iconClass = 'h-6 w-6 fill-current text-green-900';\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"mt-5 sm:flex justify-around\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"todo-input appearance-none outline-none sm:p-1 leading-snug placeholder-gray-500 placeholder-opacity-50 border-2 border-solid border-green-600 border-opacity-75 rounded-md bg-green-200\",\n    type: \"text\",\n    placeholder: edit ? '' : 'add task..',\n    value: input,\n    name: \"task\",\n    onChange: e => setInput(e.target.value),\n    ref: inputRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"form-btn w-6 mt-2 focus:outline-none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, edit ? /*#__PURE__*/React.createElement(GrUpdate, {\n    className: iconClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 33\n    }\n  }) : /*#__PURE__*/React.createElement(GrAdd, {\n    className: iconClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 68\n    }\n  }))));\n}\n\nexport default TodoForm;","map":{"version":3,"sources":["C:/Users/minhn/OneDrive/Desktop/projects/react-todo-app/src/components/TodoForm.js"],"names":["React","useState","useEffect","useRef","GrAdd","GrUpdate","TodoForm","edit","addTodo","updateTodo","handleUpdate","input","setInput","inputRef","current","focus","handleSubmit","e","preventDefault","console","log","id","Math","floor","random","value","completed","iconClass","target"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAiD,OAAjD;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,gBAA9B;;AAEA,SAASC,QAAT,CAAkB;AAACC,EAAAA,IAAD;AAAMC,EAAAA,OAAN;AAAeC,EAAAA,UAAf;AAA2BC,EAAAA;AAA3B,CAAlB,EAA4D;AACxD,QAAK,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAjC;AAEA,QAAMY,QAAQ,GAAGV,MAAM,CAAC,IAAD,CAAvB;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACVW,IAAAA,QAAQ,CAACC,OAAT,CAAiBC,KAAjB;AACH,GAFQ,CAAT;;AAGA,QAAMC,YAAY,GAAIC,CAAD,IAAM;AACvBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAG,CAACX,IAAJ,EAAS;AACLY,MAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACAH,MAAAA,OAAO,CAAC;AACJa,QAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,CADA;AAEJC,QAAAA,KAAK,EAAEd,KAFH;AAGJJ,QAAAA,IAAI,EAAE,KAHF;AAIJmB,QAAAA,SAAS,EAAE;AAJP,OAAD,CAAP;AAMH,KARD,MAQK;AACDjB,MAAAA,UAAU,CAAC;AACPY,QAAAA,EAAE,EAAEd,IAAI,CAACc,EADF;AAEPI,QAAAA,KAAK,EAAEd,KAFA;AAGPJ,QAAAA,IAAI,EAAE,KAHC;AAIPmB,QAAAA,SAAS,EAAEnB,IAAI,CAACmB;AAJT,OAAD,CAAV;AAMAhB,MAAAA,YAAY;AACf;;AAEDE,IAAAA,QAAQ,CAAC,EAAD,CAAR;AAEH,GAtBD;;AAwBA,QAAMe,SAAS,GAAE,qCAAjB;AACA,sBACI;AAAM,IAAA,SAAS,EAAC,6BAAhB;AAA8C,IAAA,QAAQ,EAAEX,YAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACA,IAAA,SAAS,EAAE,0LADX;AAEA,IAAA,IAAI,EAAC,MAFL;AAEY,IAAA,WAAW,EAAET,IAAI,GAAE,EAAF,GAAO,YAFpC;AAGA,IAAA,KAAK,EAAEI,KAHP;AAGc,IAAA,IAAI,EAAC,MAHnB;AAIA,IAAA,QAAQ,EAAGM,CAAC,IAAIL,QAAQ,CAACK,CAAC,CAACW,MAAF,CAASH,KAAV,CAJxB;AAKA,IAAA,GAAG,EAAEZ,QALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADR,eASQ;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,SAAS,EAAC,sCAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,IAAI,gBAAG,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAEoB,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBAAsC,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEA,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD/C,CADJ,CATR,CADJ;AAiBH;;AAED,eAAerB,QAAf","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\r\nimport {GrAdd, GrUpdate} from 'react-icons/gr'\r\n\r\nfunction TodoForm({edit,addTodo, updateTodo, handleUpdate}) {\r\n    const[input, setInput] = useState('');\r\n\r\n    const inputRef = useRef(null)\r\n\r\n    useEffect(()=>{\r\n        inputRef.current.focus();\r\n    })\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if(!edit){\r\n            console.log(input);\r\n            addTodo({\r\n                id: Math.floor(Math.random() * 1000),\r\n                value: input,\r\n                edit: false,\r\n                completed: false\r\n            });\r\n        }else{\r\n            updateTodo({\r\n                id: edit.id,\r\n                value: input,\r\n                edit: false,\r\n                completed: edit.completed\r\n            })\r\n            handleUpdate()\r\n        }\r\n\r\n        setInput('')\r\n        \r\n    }\r\n\r\n    const iconClass ='h-6 w-6 fill-current text-green-900'\r\n    return (\r\n        <form className=\"mt-5 sm:flex justify-around\" onSubmit={handleSubmit}>\r\n                <div className=\"\">\r\n                    <input\r\n                    className= 'todo-input appearance-none outline-none sm:p-1 leading-snug placeholder-gray-500 placeholder-opacity-50 border-2 border-solid border-green-600 border-opacity-75 rounded-md bg-green-200'\r\n                    type=\"text\" placeholder={edit? '' : 'add task..'} \r\n                    value={input} name=\"task\" \r\n                    onChange={ e => setInput(e.target.value)}\r\n                    ref={inputRef}/>                 \r\n                </div>\r\n                <div className=\"\">\r\n                    <button className=\"form-btn w-6 mt-2 focus:outline-none\">\r\n                        {edit ? <GrUpdate className={iconClass}/>: <GrAdd className={iconClass}/>}\r\n                    </button>\r\n                </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TodoForm\r\n"]},"metadata":{},"sourceType":"module"}