{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\minhn\\\\OneDrive\\\\Desktop\\\\projects\\\\react-todo-app\\\\src\\\\components\\\\Todo.js\";\nimport React, { useState } from 'react';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\nimport TodoForm from './TodoForm';\n\nfunction Todo({\n  passedTodo,\n  deleteTodo,\n  updateTodo\n}) {\n  const [todo, setTodo] = useState({\n    id: passedTodo.id,\n    value: passedTodo.value,\n    edit: passedTodo.edit,\n    completed: passedTodo.complete\n  });\n\n  if (todo.edit) {\n    console.log(todo.edit);\n    return /*#__PURE__*/React.createElement(TodoForm, {\n      edit: todo,\n      updateTodo: updateTodo,\n      setTodo: setTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: todo.completed ? 'todo-row-complete' : 'todo-row',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"child\",\n    onClick: () => setTodo({\n      completed: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, \" \", todo.value), /*#__PURE__*/React.createElement(RiCloseCircleLine, {\n    className: \"child\",\n    onClick: () => deleteTodo(todo.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TiEdit, {\n    className: \"child\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Todo;","map":{"version":3,"sources":["C:/Users/minhn/OneDrive/Desktop/projects/react-todo-app/src/components/Todo.js"],"names":["React","useState","RiCloseCircleLine","TiEdit","TodoForm","Todo","passedTodo","deleteTodo","updateTodo","todo","setTodo","id","value","edit","completed","complete","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,iBAAR,QAAgC,gBAAhC;AACA,SAAQC,MAAR,QAAqB,gBAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,SAASC,IAAT,CAAc;AAACC,EAAAA,UAAD;AAAaC,EAAAA,UAAb;AAAyBC,EAAAA;AAAzB,CAAd,EAAoD;AAEhD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAE;AAC9BU,IAAAA,EAAE,EAACL,UAAU,CAACK,EADgB;AAE9BC,IAAAA,KAAK,EAAEN,UAAU,CAACM,KAFY;AAG9BC,IAAAA,IAAI,EAAEP,UAAU,CAACO,IAHa;AAI9BC,IAAAA,SAAS,EAAER,UAAU,CAACS;AAJQ,GAAF,CAAhC;;AAOA,MAAGN,IAAI,CAACI,IAAR,EAAc;AACVG,IAAAA,OAAO,CAACC,GAAR,CAAYR,IAAI,CAACI,IAAjB;AACA,wBAAO,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEJ,IAAhB;AAAsB,MAAA,UAAU,EAAED,UAAlC;AAA8C,MAAA,OAAO,EAAEE,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AACD,sBACI;AAAK,IAAA,SAAS,EAAED,IAAI,CAACK,SAAL,GAAiB,mBAAjB,GAAsC,UAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,SAAS,EAAC,OAAb;AAAqB,IAAA,OAAO,EAAE,MAAKJ,OAAO,CAAC;AAACI,MAAAA,SAAS,EAAE;AAAZ,KAAD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAiEL,IAAI,CAACG,KAAtE,CADJ,eAEI,oBAAC,iBAAD;AAAmB,IAAA,SAAS,EAAC,OAA7B;AAAqC,IAAA,OAAO,EAAE,MAAKL,UAAU,CAACE,IAAI,CAACE,EAAN,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAOH;;AAED,eAAeN,IAAf","sourcesContent":["import React, {useState} from 'react'\r\nimport {RiCloseCircleLine} from 'react-icons/ri';\r\nimport {TiEdit} from 'react-icons/ti';\r\nimport TodoForm from './TodoForm';\r\n\r\nfunction Todo({passedTodo, deleteTodo, updateTodo}) {\r\n\r\n    const [todo, setTodo] = useState ({\r\n        id:passedTodo.id,\r\n        value: passedTodo.value,\r\n        edit: passedTodo.edit,\r\n        completed: passedTodo.complete\r\n    })\r\n\r\n    if(todo.edit) {\r\n        console.log(todo.edit);\r\n        return <TodoForm edit={todo} updateTodo={updateTodo} setTodo={setTodo}/>\r\n    }\r\n    return (\r\n        <div className={todo.completed ? 'todo-row-complete': 'todo-row'}>\r\n            <p className=\"child\" onClick={()=> setTodo({completed: true})}> {todo.value}</p>\r\n            <RiCloseCircleLine className=\"child\" onClick={() =>deleteTodo(todo.id)}/>\r\n            <TiEdit className=\"child\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n"]},"metadata":{},"sourceType":"module"}