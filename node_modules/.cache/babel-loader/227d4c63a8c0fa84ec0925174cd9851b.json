{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\minhn\\\\OneDrive\\\\Desktop\\\\projects\\\\react-todo-app\\\\src\\\\components\\\\Todo.js\";\nimport React, { useState, useEffect } from 'react';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\nimport TodoForm from './TodoForm';\n\nfunction Todo({\n  todos,\n  completeTodo,\n  deleteTodo,\n  updateTodo\n}) {\n  const [editTodo, setEditTodo] = useState({\n    id: null,\n    value: '',\n    edit: false,\n    completed: null\n  });\n  const updateFormClass = 'flex-1';\n\n  const handleUpdate = () => {\n    setEditTodo({\n      id: null,\n      value: '',\n      edit: false,\n      completed: null\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-wrap justify-around bg-green-100 px-4 py-2 m-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, todos.map((todo, index) => editTodo.id === todo.id ? /*#__PURE__*/React.createElement(TodoForm, {\n    classes: updateFormClass,\n    key: index,\n    edit: editTodo,\n    updateTodo: updateTodo,\n    handleUpdate: handleUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 18\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: `flex items-center ${todo.completed ? 'line-through text-gray-500' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mr-2\",\n    onClick: () => completeTodo(todo.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, todo.value), /*#__PURE__*/React.createElement(RiCloseCircleLine, {\n    className: \"\",\n    onClick: () => deleteTodo(todo.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TiEdit, {\n    className: \"\",\n    onClick: () => setEditTodo(todo),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  })))); // (editTodo.id === todo.id) ?\n  //  (<TodoForm key={index} edit={editTodo} updateTodo={updateTodo} handleUpdate={handleUpdate}/>): (\n  // <div key={index} className={todo.completed ? 'todo-row complete': 'todo-row'}>\n  //     <div className=\"task flex-item\" onClick={() => completeTodo(todo.id)}>{todo.value}</div>\n  //     <RiCloseCircleLine className=\"delete-btn\" onClick={() =>deleteTodo(todo.id)}/>\n  //     <TiEdit className=\"edit-btn\" onClick={() => setEditTodo(todo)}/>\n  // </div>\n  // ) \n}\n\nexport default Todo;","map":{"version":3,"sources":["C:/Users/minhn/OneDrive/Desktop/projects/react-todo-app/src/components/Todo.js"],"names":["React","useState","useEffect","RiCloseCircleLine","TiEdit","TodoForm","Todo","todos","completeTodo","deleteTodo","updateTodo","editTodo","setEditTodo","id","value","edit","completed","updateFormClass","handleUpdate","map","todo","index"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,iBAAR,QAAgC,gBAAhC;AACA,SAAQC,MAAR,QAAqB,gBAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,SAASC,IAAT,CAAc;AAACC,EAAAA,KAAD;AAAQC,EAAAA,YAAR;AAAsBC,EAAAA,UAAtB;AAAkCC,EAAAA;AAAlC,CAAd,EAA6D;AAEzD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC;AACrCY,IAAAA,EAAE,EAAE,IADiC;AAErCC,IAAAA,KAAK,EAAE,EAF8B;AAGrCC,IAAAA,IAAI,EAAE,KAH+B;AAIrCC,IAAAA,SAAS,EAAE;AAJ0B,GAAD,CAAxC;AAOA,QAAMC,eAAe,GAAC,QAAtB;;AAEA,QAAMC,YAAY,GAAG,MAAM;AACvBN,IAAAA,WAAW,CAAC;AACRC,MAAAA,EAAE,EAAE,IADI;AAERC,MAAAA,KAAK,EAAE,EAFC;AAGRC,MAAAA,IAAI,EAAE,KAHE;AAIRC,MAAAA,SAAS,EAAE;AAJH,KAAD,CAAX;AAMH,GAPD;;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,0DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,KAAK,CAACY,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KACNV,QAAQ,CAACE,EAAT,KAAgBO,IAAI,CAACP,EAAtB,gBACC,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEI,eAAnB;AAAoC,IAAA,GAAG,EAAEI,KAAzC;AAAgD,IAAA,IAAI,EAAEV,QAAtD;AAAgE,IAAA,UAAU,EAAED,UAA5E;AAAwF,IAAA,YAAY,EAAEQ,YAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,gBAEC;AAAK,IAAA,GAAG,EAAEG,KAAV;AAAiB,IAAA,SAAS,EAAG,qBAAoBD,IAAI,CAACJ,SAAL,GAAiB,4BAAjB,GAA+C,EAAG,EAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,OAAO,EAAE,MAAMR,YAAY,CAACY,IAAI,CAACP,EAAN,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6DO,IAAI,CAACN,KAAlE,CADH,eAEG,oBAAC,iBAAD;AAAmB,IAAA,SAAS,EAAC,EAA7B;AAAgC,IAAA,OAAO,EAAE,MAAKL,UAAU,CAACW,IAAI,CAACP,EAAN,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,eAGG,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,EAAlB;AAAqB,IAAA,OAAO,EAAE,MAAMD,WAAW,CAACQ,IAAD,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHH,CAHJ,CADL,CADJ,CApByD,CAkCzD;AACA;AACI;AACA;AACA;AACA;AACA;AACJ;AACH;;AAED,eAAed,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {RiCloseCircleLine} from 'react-icons/ri';\r\nimport {TiEdit} from 'react-icons/ti';\r\nimport TodoForm from './TodoForm';\r\n\r\nfunction Todo({todos, completeTodo, deleteTodo, updateTodo}) {\r\n\r\n    const [editTodo, setEditTodo] = useState({\r\n        id: null,\r\n        value: '',\r\n        edit: false,\r\n        completed: null\r\n    })\r\n\r\n    const updateFormClass='flex-1';\r\n\r\n    const handleUpdate = () => {\r\n        setEditTodo({\r\n            id: null,\r\n            value: '',\r\n            edit: false,\r\n            completed: null\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className=\"flex flex-wrap justify-around bg-green-100 px-4 py-2 m-2\">\r\n            {todos.map((todo, index) =>\r\n                (editTodo.id === todo.id) ? \r\n                (<TodoForm classes={updateFormClass} key={index} edit={editTodo} updateTodo={updateTodo} handleUpdate={handleUpdate}/>) :\r\n                (<div key={index} className={`flex items-center ${todo.completed ? 'line-through text-gray-500': ''}`}>\r\n                    <div className=\"mr-2\" onClick={() => completeTodo(todo.id)}>{todo.value}</div>\r\n                    <RiCloseCircleLine className=\"\" onClick={() =>deleteTodo(todo.id)}/>\r\n                    <TiEdit className=\"\" onClick={() => setEditTodo(todo)}/>\r\n                </div>)\r\n             )}\r\n        </div>\r\n    ) \r\n    \r\n    // (editTodo.id === todo.id) ?\r\n    //  (<TodoForm key={index} edit={editTodo} updateTodo={updateTodo} handleUpdate={handleUpdate}/>): (\r\n        // <div key={index} className={todo.completed ? 'todo-row complete': 'todo-row'}>\r\n        //     <div className=\"task flex-item\" onClick={() => completeTodo(todo.id)}>{todo.value}</div>\r\n        //     <RiCloseCircleLine className=\"delete-btn\" onClick={() =>deleteTodo(todo.id)}/>\r\n        //     <TiEdit className=\"edit-btn\" onClick={() => setEditTodo(todo)}/>\r\n        // </div>\r\n    // ) \r\n}\r\n\r\nexport default Todo\r\n"]},"metadata":{},"sourceType":"module"}