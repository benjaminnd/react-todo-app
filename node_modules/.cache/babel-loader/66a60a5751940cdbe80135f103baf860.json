{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\minhn\\\\OneDrive\\\\Desktop\\\\projects\\\\react-todo-app\\\\src\\\\components\\\\TodoList.js\";\nimport React, { useState } from 'react';\nimport Todo from './Todo.js';\nimport TodoForm from './TodoForm';\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n  let list = [];\n\n  const addTodo = todo => {\n    if (todo.value === '' || /^\\s*$/.test(todo)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n  };\n\n  const updateTodo = newTodo => {\n    if (newTodo.value === '' || /^\\s*$/.test(newTodo)) {\n      return;\n    }\n\n    const newTodos = todos.map(todo => newTodo.id === todo.id ? newTodo : todo);\n    setTodos(newTodos);\n  };\n\n  const deleteTodo = id => {\n    console.log('deleting ', id, 'from', todos);\n    const newTodos = todos.filter(todo => todo.id !== id);\n    setTodos(newTodos);\n  };\n\n  const completeTodo = id => {\n    console.log('completed ', id, 'from', todos);\n    const newTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n\n      return todo;\n    });\n    setTodos(newTodos);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TodoForm, {\n    addTodo: addTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Todo, {\n    todos: todos,\n    updateTodo: updateTodo,\n    deleteTodo: deleteTodo,\n    completeTodo: completeTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default TodoList;","map":{"version":3,"sources":["C:/Users/minhn/OneDrive/Desktop/projects/react-todo-app/src/components/TodoList.js"],"names":["React","useState","Todo","TodoForm","TodoList","todos","setTodos","list","addTodo","todo","value","test","newTodos","updateTodo","newTodo","map","id","deleteTodo","console","log","filter","completeTodo","completed"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,SAASC,QAAT,GAAoB;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,MAAIM,IAAI,GAAG,EAAX;;AACA,QAAMC,OAAO,GAAGC,IAAI,IAAI;AACpB,QAAIA,IAAI,CAACC,KAAL,KAAe,EAAf,IAAqB,QAAQC,IAAR,CAAaF,IAAb,CAAzB,EAA6C;AACzC;AACH;;AAED,UAAMG,QAAQ,GAAG,CAACH,IAAD,EAAO,GAAGJ,KAAV,CAAjB;AACAC,IAAAA,QAAQ,CAACM,QAAD,CAAR;AACH,GAPD;;AASA,QAAMC,UAAU,GAAGC,OAAO,IAAI;AAC1B,QAAIA,OAAO,CAACJ,KAAR,KAAkB,EAAlB,IAAwB,QAAQC,IAAR,CAAaG,OAAb,CAA5B,EAAmD;AAC/C;AACH;;AAED,UAAMF,QAAQ,GAAGP,KAAK,CAACU,GAAN,CAAUN,IAAI,IAAKK,OAAO,CAACE,EAAR,KAAeP,IAAI,CAACO,EAApB,GAAyBF,OAAzB,GAAmCL,IAAtD,CAAjB;AACAH,IAAAA,QAAQ,CAACM,QAAD,CAAR;AACH,GAPD;;AASA,QAAMK,UAAU,GAAGD,EAAE,IAAI;AACrBE,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBH,EAAzB,EAA6B,MAA7B,EAAqCX,KAArC;AACA,UAAMO,QAAQ,GAAGP,KAAK,CAACe,MAAN,CAAaX,IAAI,IAAIA,IAAI,CAACO,EAAL,KAAYA,EAAjC,CAAjB;AACAV,IAAAA,QAAQ,CAACM,QAAD,CAAR;AAEH,GALD;;AAOA,QAAMS,YAAY,GAAGL,EAAE,IAAI;AACvBE,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,EAA1B,EAA8B,MAA9B,EAAsCX,KAAtC;AACA,UAAMO,QAAQ,GAAGP,KAAK,CAACU,GAAN,CAAUN,IAAI,IAAI;AAC/B,UAAGA,IAAI,CAACO,EAAL,KAAYA,EAAf,EAAmB;AACfP,QAAAA,IAAI,CAACa,SAAL,GAAiB,CAACb,IAAI,CAACa,SAAvB;AACH;;AACD,aAAOb,IAAP;AACH,KALgB,CAAjB;AAMAH,IAAAA,QAAQ,CAACM,QAAD,CAAR;AAEH,GAVD;;AAcA,sBACI,uDACI,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEJ,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,KAAb;AAAoB,IAAA,UAAU,EAAEQ,UAAhC;AAA4C,IAAA,UAAU,EAAEI,UAAxD;AAAoE,IAAA,YAAY,EAAEI,YAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH;;AAED,eAAejB,QAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport Todo from './Todo.js';\r\nimport TodoForm from './TodoForm';\r\n\r\nfunction TodoList() {\r\n    const [todos, setTodos] = useState([]);\r\n    let list = []\r\n    const addTodo = todo => {\r\n        if (todo.value === '' || /^\\s*$/.test(todo)) {\r\n            return\r\n        }\r\n\r\n        const newTodos = [todo, ...todos];\r\n        setTodos(newTodos);\r\n    }\r\n\r\n    const updateTodo = newTodo => {\r\n        if (newTodo.value === '' || /^\\s*$/.test(newTodo)) {\r\n            return\r\n        }\r\n\r\n        const newTodos = todos.map(todo => (newTodo.id === todo.id ? newTodo : todo))\r\n        setTodos(newTodos);\r\n    }\r\n\r\n    const deleteTodo = id => {\r\n        console.log('deleting ', id, 'from', todos)\r\n        const newTodos = todos.filter(todo => todo.id !== id);\r\n        setTodos(newTodos)\r\n        \r\n    }\r\n\r\n    const completeTodo = id => {\r\n        console.log('completed ', id, 'from', todos)\r\n        const newTodos = todos.map(todo => {\r\n            if(todo.id === id) {\r\n                todo.completed = !todo.completed\r\n            }\r\n            return todo;\r\n        });\r\n        setTodos(newTodos)\r\n        \r\n    }\r\n\r\n        \r\n\r\n    return (\r\n        <>\r\n            <TodoForm addTodo={addTodo}/>\r\n            <Todo todos={todos} updateTodo={updateTodo} deleteTodo={deleteTodo} completeTodo={completeTodo}/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TodoList\r\n"]},"metadata":{},"sourceType":"module"}